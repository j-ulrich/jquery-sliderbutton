{"tagline":"jQuery UI/Mobile plugin providing a slider-based button (\"slide to unlock\")","body":"jQuery UI/Mobile Sliderbutton 1.0\r\n=================================\r\n\r\nThe sliderbutton plugin provides a button which is triggered by sliding a handle to the side. This\r\nis a simple technique to avoid accidentally pressing a button.\r\n\r\nThe plugin is based on the jQuery UI/Mobile slider widget. Since this widget differs in its\r\nimplementation in jQuery UI and jQuery mobile, the plugin comes in two versions: one for jQuery UI\r\nand one for jQuery Mobile. The plugin tries to hide the differences between the versions, which means\r\nthat the API documented below applies to both versions (exceptions are marked accordingly) but the\r\ngenerated markup and CSS differs.\r\n\r\nInitialization & Usage\r\n----------------------\r\nThe sliderbutton is created from a div element. When the sliderbutton is activated, the `activate`\r\nevent is triggered. So to execute the desired action, bind a function to the `activate` event. \r\n\r\n#### Example: ####\r\n```javascript\r\n// Initialize the sliderbutton\r\n$('#SliderDiv').sliderbutton({\r\n\ttext: \"slide to submit\", // Set slider lane text\r\n\tactivate: function() { alert('Submitted!'); } // Bind to the activate event during initialization\r\n});\r\n\r\n// Bind to the activate event after initialization\r\n$('#SliderDiv').bind('sliderbuttonactivate', function() { alert('Activate!'); });\r\n\r\n// Turn sliderbutton around\r\n$('#SliderDiv').sliderbutton('option', 'direction', 'right');\r\n```\r\n\r\n#### Demos: ####\r\nThe [demos folder](https://github.com/j-ulrich/jquery-sliderbutton/tree/master/demos) contains a\r\ndemonstration of most of the features of both versions of the sliderbutton plugin.\r\n\r\nA live demo can be found at JS Bin where you can also play around with the plugin:\r\n* UI: http://jsbin.com/eqasew/2/edit#live ([play around](http://jsbin.com/eqasew/2/edit))\r\n* Mobile: http://jsbin.com/igovef/6/edit#live ([play around](http://jsbin.com/igovef/6/edit))\r\n\r\nOptions\r\n-------\r\n* __disabled__ _{Boolean}_: Disables (`true`) or enables (`false`) the sliderbutton. Default: `false`\r\n* __text__ _{String}_: The text appearing on the slider lane. Default: `\"slide to unlock\"`\r\n* __tolerance__ _{Numeric}_: Defines the distance from the end of the slider lane where the button is triggered\r\n\t(activated). Must be in the range [0,100] where 0 means no tolerance (i.e. the slider needs to be\r\n\tmoved entirely to the end before the button is triggered) and 100 means maximum tolerance (i.e. the\r\n\tslider just needs to be moved a slight bit for the button to trigger). Default: `1` for the UI\r\n\tversion and `5` for the mobile version.\r\n* __direction__ _{\"right\"|\"left\"}_: Defines the direction in which the slider needs to be moved.\r\n\tDefault: `\"right\"`\r\n* __opacity__ _{Function}_: Can be used to customize how the opacity of the text is changed. The function\r\n\tis handed one parameter, the current value in the range [0,100] where 0 means the slider is at\r\n\tthe start (idle position) and 100 means the slider it at the end (activated). The provided function\r\n\tthen has to return a value for the opacity of the text. The default is\r\n\t`function(value) { return 1.0-(value/(100.0/2.0)); }` which means a linear fade out where the\r\n\ttext becomes invisible in the middle of the lane.\r\n* __mini__ _{Boolean}_: **Mobile version only.** Creates a mini version of the sliderbutton. Default: `false`\r\n\r\nEvents\r\n------\r\n* __create__ _{sliderbuttoncreate}_: Triggered after the sliderbutton has been created.\r\n* __slide__ _{sliderbuttonslide}_: Triggered when the slider handle is moving. The callback is provided\r\n\tthe arguments `event` and `ui` where `ui.value` is the current value (position) of the handle\r\n\tin the range [0,100]. 0 means the slider is at the start (idle position) and 100 means the\r\n\tslider is at the end (activated). \r\n* __activate__ _{sliderbuttonactivate}_: Triggered when the slider handle reaches the \"end\" (taking the\r\n\ttolerance into account).\r\n* __start__ _{sliderbuttonstart}_: Triggered when the slider handle starts to move.\r\n* __stop__ _{sliderbuttonstop}_: Triggered when the slider handle is released and starts to slide back\r\n\tinto its idle position.\r\n\r\nMethods\r\n-------\r\n* __destroy__: **UI version only.** Removes the sliderbutton functionality completely. This will return the element back\r\n\tto its pre-init state.\r\n\t- Synopsis: `.sliderbutton(\"destroy\")`\r\n* __disable__: Disables the sliderbutton.\r\n\t- Synopsis: `.sliderbutton(\"disable\")`\r\n* __enable__: Enalbes the sliderbutton.\r\n\t- Synopsis: `.sliderbutton(\"enable\")`\r\n* __option__: Get or set any sliderbutton option. If no value is specified, will act as a getter.\r\n\t- Synopsis: `.sliderbutton(\"option\", optionName, [value])`\r\n\t- Parameters:\r\n\t\t* __optionName__ _{String}_: The name of the option to be set/returned.\r\n\t\t* [optional] __value__ _{?}_: The new value for the option. The type depends on the option \r\n\t\t\tto be set.\r\n\t- Returns _{?}_: The current value of the option if the function is used as a getter\r\n\t\t(i.e. if _value_ is omitted). The type depends on the option. Returns the jQuery object if the\r\n\t\tfunction is used as a setter.\r\n* __option__: Set multiple sliderbutton options at once by providing an options object.\r\n\t- Synopsis: `.sliderbutton(\"option\", options)`\r\n* __widget__: Returns the .ui-sliderbutton element.\r\n\t- Synopsis: `.sliderbutton(\"widget\")`\r\n\t- Returns _{Object}_: The `.ui-sliderbutton` element.\r\n\r\nRequirements\r\n------------\r\nThe plugin requires\r\n* jQuery 1.3.2+\r\n* jQuery UI 1.8 (including the slider widget) or jQuery Mobile\r\n\r\nCompatibility\r\n------------\r\nThe UI version of the plugin has been successfully tested with jQuery 1.7.2 and jQuery UI 1.8.20 and\r\nit should be compatible with future versions as long as the implementation of the jQuery UI slider\r\ndoes not change.\r\n\r\nThe mobile version has been successfully tested with jQuery 1.7.2 and jQuery Mobile 1.1.0 and it\r\nshould be compatible with future versions as long as the implementation of the jQuery mobile slider\r\ndoes not change.\r\n\r\nLicensing\r\n---------\r\nCopyright (c) 2012 Jochen Ulrich\r\nhttp://github.com/j-ulrich/jquery-sliderbutton\r\n\r\nLicensed under the [MIT license](http://opensource.org/licenses/MIT).\r\n\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"jquery-sliderbutton","google":""}